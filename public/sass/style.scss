*, *:before, *:after {
  box-sizing: border-box;
}

img, embed, object, video{
  max-width: 100%;
  height: auto;
}
body{
  font-family: "Lucida Sans Unicode", "Lucida Grande", sans-serif;
  background: rgb(195,235,253);
  width: 100%;
}
.clearfix:before, .clearfix:after {
  content: "";
  display: table;
}

.clearfix:after {
  clear: both;
}

.clearfix {
  zoom: 1;
}

.landingNav{
  background: rgb(134,215,252);
}

.landingDivs{
  margin: 0 auto;
  text-align: center;
  border: 1px solid black;
}


/* centered columns styles */
.row-centered {
  text-align:center;
}
.col-centered {
  display:inline-block;
  float:none;
  /* reset the text-align */
  text-align:left;
  /* inline-block space fix */
  margin-right:-4px;
}

.loginDiv{

  text-align: center;
}
.loginDiv input{
  margin: 0 auto;
}

.col-fixed {
  /* custom width */
  width:320px;
}
.col-min {
  /* custom min width */
  min-width:320px;
}
.col-max {
  /* custom max width */
  max-width:320px;
}

.col-xs-7.col-centered .item .col-xs-2.col-centered.myIframe {
  width: 100% !important;
}
iframe {
  width: 100%;
}

button{
  background: rgb(56,155,233);
  border:none;
  color: rgb(255,255,255);
  margin-top: 2%;
}
button:hover{
  background: rgb(255,255,255);
  border:none;
  color: rgb(56,155,233);
  margin-top: 2%;
}

.homeFont{
  color: rgb(56,155,233);
}

.columnText{
  max-width: 1170px;
  word-break: break-all;
}

.postContent{
  background: rgb(151,215,249);
}

.nav-pills{
  background: rgb(185,236,253);

}

.nav-pills a{
  color: rgb(51,151,236);
}

.columnText{
  color: rgb(56,155,233);
}



form[novalidate] input{
  border-left-width: 8px;
  border-color: #3498db;
  border-style: solid;
}
input[required].ng-pristine{
  border-color: #e74c3c;
}

input.ng-invalid.ng-dirty{
  border-color: #e74c3c;
}

input.ng-valid.ng-dirty{
  border-color: #2ecc71;
}




textarea[required].ng-pristine{
  border-color: #e74c3c;
}

textarea.ng-invalid.ng-dirty{
  border-color: #e74c3c;
}

textarea.ng-valid.ng-dirty{
  border-color: #2ecc71;
}

/* .ng-hide-add{
  transition:0.75s;
  opacity: 0;
  animation:0.9s lightSpeedOut ease;
}
.ng-hide-remove{
  transition:0.75s;
  opacity: 1;
animation:0.5s flipInX ease;
} */
.ng-enter{
  transition:0.75s;
  opacity: 0;
}
.ng-enter-stagger{
  transition-delay:0.1s;
}
.ng-leave-stagger{
  transition-delay:0.1s;
}
.ng-enter-active{
  opacity: 1;
}

.ng-leave{
  transition:0.75s;
  opacity: 1;
}

.ng-leave-active{
  opacity: 0;
}

/* ANIMATIONS (FROM ANIMATE.CSS) ========================
flip in
@keyframes flipInX {
  0% {
    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
    transition-timing-function: ease-in;
    opacity: 0;
  }

  40% {
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);
    transition-timing-function: ease-in;
    transition-timing-function: ease-in;
  }

  60% {
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);
    opacity: 1;
  }

  80% {
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);
  }

  100% {
    transform: perspective(400px);
    transform: perspective(400px);
    transform: perspective(400px);
  }
}

light speed out
@keyframes lightSpeedOut {
  0% {
    opacity: 1;
  }

  100% {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}

@keyframes lightSpeedOut {
  0% {
    opacity: 1;
  }

  100% {
    transform: translate3d(100%, 0, 0) skewX(30deg);
    transform: translate3d(100%, 0, 0) skewX(30deg);
    transform: translate3d(100%, 0, 0) skewX(30deg);
    opacity: 0;
  }
}
 */
